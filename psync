#!/usr/bin/perl
#
#  Usage:
#    psync [-vzn] -f|-t|-w PATH
#  Options:
#    -v  verbose
#    -z  zlib compress
#    -n  dry-run
#    -t  sync to
#    -f  sync from
#    -w  sync with
#
#  Copyright pigsboss@github
#

use strict;
use warnings;
use Config::IniFiles;
use Sys::Hostname;
use File::Spec;
use Getopt::Std;

our($opt_v, $opt_n, $opt_z, $opt_t, $opt_f, $opt_w);
my($syncmode, $deviceroot);
getopts('vnzt:f:w:');
if($opt_t){
    $syncmode = 'to';
    $deviceroot = $opt_t;
}
if($opt_f){
    $syncmode = 'from';
    $deviceroot = $opt_f;
}
if($opt_w){
    $syncmode = 'with';
    $deviceroot = $opt_w;
}
my $rsyncopts = '-rltu';
$rsyncopts = $rsyncopts.'v' if($opt_v);
$rsyncopts = $rsyncopts.'z' if($opt_z);
$rsyncopts = $rsyncopts.'n' if($opt_n);

my $hostname = hostname;
my $cfgfile = File::Spec->catfile($deviceroot, ".$hostname.ini");
my $cfg;
if(-d $deviceroot){
    if(-e -r $cfgfile){
	$cfg = Config::IniFiles->new(-file=>$cfgfile);
	print("Configuration file $cfgfile loaded.\n")
    }else{
	print("Configuration file for the current host ($cfgfile) does not exits.\n");
	exit 1;
    }
}else{
    print("User specified device root $deviceroot does not exist.\n");
    exit 1;
}

my @tasks = $cfg->Sections();
my ($host_dir, $device_dir);
for(@tasks){
    $host_dir = $cfg->val($_, "host_dir");
    $device_dir = File::Spec->catdir(($deviceroot, $cfg->val($_, "device_dir")));
    if($syncmode eq 'from'){
	system('rsync', $rsyncopts, '--existing', $device_dir, $host_dir);
    }elsif($syncmode eq 'to'){
	system('rsync', $rsyncopts, $host_dir, $device_dir);
    }elsif($syncmode eq 'with'){
	system('rsync', $rsyncopts, $host_dir, $device_dir);
	system('rsync', $rsyncopts, '--existing', $device_dir, $host_dir);
    }else{
	print("User specified sync mode is not supported.\n");
	exit 2;
    }
    print("Task $_ (sync $host_dir $syncmode $device_dir) has been finished.\n");
}


