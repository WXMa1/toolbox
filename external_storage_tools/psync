#!/usr/bin/perl
#
#  Usage:
#    psync -f|-t|-w PATH
#  Options:
#    -t  sync to
#    -f  sync from
#    -w  sync with
#
#  Copyright pigsboss@github
#

use strict;
use warnings;
use Config::IniFiles;
use Sys::Hostname;
use File::Spec;
use Getopt::Std;
use File::Find;

our($opt_t, $opt_f, $opt_w);
our $deviceroot;
my $syncmode;
getopts('t:f:w:');
if($opt_t){
    $syncmode = 'to';
    $deviceroot = $opt_t;
}
if($opt_f){
    $syncmode = 'from';
    $deviceroot = $opt_f;
}
if($opt_w){
    $syncmode = 'with';
    $deviceroot = $opt_w;
}

my $hostname = hostname;
my $cfgfile = File::Spec->catfile($deviceroot, ".$hostname.ini");
my $cfg;
if(-d $deviceroot){
    if(-e -r $cfgfile){
	$cfg = Config::IniFiles->new(-file=>$cfgfile);
    }else{
	print("Configuration file for the current host ($cfgfile) does not exits.\n");
	exit 1;
    }
}else{
    print("User specified device root $deviceroot does not exist.\n");
    exit 1;
}

my @tasks = $cfg->Sections();
our($host_dir, $device_dir);
for(@tasks){
    $host_dir = $cfg->val($_, "host_dir");
    $device_dir = File::Spec->catdir(($deviceroot, $cfg->val($_, "device_dir")));
    print("Task [$_]: sync $host_dir $syncmode $device_dir.\n");
    if($syncmode eq 'from'){
	sync_from_device();
    }elsif($syncmode eq 'to'){
	sync_to_device();
    }elsif($syncmode eq 'with'){
	sync_to_device();
	sync_from_device();
    }else{
	print("User specified sync mode is not supported.\n");
	exit 2;
    }
    print("Task [$_] is finished.\n");
    print("----------------------------------------------\n");
}

sub sync_from_device{
    chdir $host_dir;
    find(\&update_exists, '.');
}

sub sync_to_device{
    print("  Copying $host_dir to $device_dir...");
    system('cp', '-a', '-u', $host_dir, File::Spec->catdir($device_dir, '../'));
    print("\r  Copying $host_dir to $device_dir... OK.\n");
}

sub update_exists{
    my $curpath = $File::Find::name;
    my $devicepath;
    my $hostpath;
    if(-f $curpath){
	$devicepath = File::Spec->catfile($device_dir, $curpath);
	$hostpath   = File::Spec->catfile($host_dir, $curpath);
	if(-e -f $devicepath){
	    print("  Updating $hostpath...");
	    system('cp', '-d', '--preserve=all', '-u', $devicepath, $curpath);
	    print("\r  Updating $hostpath... OK.\n");
	}
    }
}
